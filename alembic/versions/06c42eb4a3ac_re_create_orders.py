"""re-create orders

Revision ID: 06c42eb4a3ac
Revises: 7f0b8b811160
Create Date: 2023-12-17 22:44:03.614787

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '06c42eb4a3ac'
down_revision: Union[str, None] = '7f0b8b811160'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('backtest_orders', sa.Column('order_id', sa.Integer(), nullable=True))
    op.add_column('backtest_orders', sa.Column('order_type', sa.Integer(), nullable=True))
    op.add_column('backtest_orders', sa.Column('contingent_id', sa.Integer(), nullable=True))
    op.add_column('backtest_orders', sa.Column('broker_id', sa.String(), nullable=True))
    op.add_column('backtest_orders', sa.Column('symbol_value', sa.String(), nullable=True))
    op.add_column('backtest_orders', sa.Column('symbol_id', sa.String(), nullable=True))
    op.add_column('backtest_orders', sa.Column('symbol_permtick', sa.String(), nullable=True))
    op.add_column('backtest_orders', sa.Column('price', sa.Numeric(), nullable=True))
    op.add_column('backtest_orders', sa.Column('price_currency', sa.String(), nullable=True))
    op.add_column('backtest_orders', sa.Column('time', sa.DateTime(), nullable=True))
    op.add_column('backtest_orders', sa.Column('created_time', sa.DateTime(), nullable=True))
    op.add_column('backtest_orders', sa.Column('last_fill_time', sa.DateTime(), nullable=True))
    op.add_column('backtest_orders', sa.Column('quantity', sa.Numeric(), nullable=True))
    op.add_column('backtest_orders', sa.Column('status', sa.Integer(), nullable=True))
    op.add_column('backtest_orders', sa.Column('tag', sa.String(), nullable=True))
    op.add_column('backtest_orders', sa.Column('security_type', sa.Integer(), nullable=True))
    op.add_column('backtest_orders', sa.Column('direction', sa.Integer(), nullable=True))
    op.add_column('backtest_orders', sa.Column('value', sa.Numeric(), nullable=True))
    op.add_column('backtest_orders', sa.Column('bid_price', sa.Numeric(), nullable=True))
    op.add_column('backtest_orders', sa.Column('ask_price', sa.Numeric(), nullable=True))
    op.add_column('backtest_orders', sa.Column('last_price', sa.Numeric(), nullable=True))
    op.add_column('backtest_orders', sa.Column('is_marketable', sa.Boolean(), nullable=True))
    op.add_column('backtest_orders', sa.Column('price_adjustment_mode', sa.Integer(), nullable=True))
    op.drop_column('backtest_orders', 'order_data')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('backtest_orders', sa.Column('order_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.drop_column('backtest_orders', 'price_adjustment_mode')
    op.drop_column('backtest_orders', 'is_marketable')
    op.drop_column('backtest_orders', 'last_price')
    op.drop_column('backtest_orders', 'ask_price')
    op.drop_column('backtest_orders', 'bid_price')
    op.drop_column('backtest_orders', 'value')
    op.drop_column('backtest_orders', 'direction')
    op.drop_column('backtest_orders', 'security_type')
    op.drop_column('backtest_orders', 'tag')
    op.drop_column('backtest_orders', 'status')
    op.drop_column('backtest_orders', 'quantity')
    op.drop_column('backtest_orders', 'last_fill_time')
    op.drop_column('backtest_orders', 'created_time')
    op.drop_column('backtest_orders', 'time')
    op.drop_column('backtest_orders', 'price_currency')
    op.drop_column('backtest_orders', 'price')
    op.drop_column('backtest_orders', 'symbol_permtick')
    op.drop_column('backtest_orders', 'symbol_id')
    op.drop_column('backtest_orders', 'symbol_value')
    op.drop_column('backtest_orders', 'broker_id')
    op.drop_column('backtest_orders', 'contingent_id')
    op.drop_column('backtest_orders', 'order_type')
    op.drop_column('backtest_orders', 'order_id')
    # ### end Alembic commands ###
